import cv2
import os

video_path = "cars1.mp4"

cap = cv2.VideoCapture(video_path)

tracker = cv2.TrackerCSRT_create()

roi_selected = False
roi = None

cascade_path = 'haarcascades/car.xml'

car_cascade = cv2.CascadeClassifier(cascade_path)

# Loop principal para rastrear o objeto no vídeo
while True:
    ret, frame = cap.read()

    if frame is None:
        break

    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Se a ROI não foi selecionada, tentar inicializá-la automaticamente com a última detecção de carro
    if not roi_selected:
        # Detectar carros no frame
        cars = car_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

        if len(cars) > 0:
            center_x, center_y = frame.shape[1] // 2, frame.shape[0] // 2
            
            roi_width, roi_height = 400, 300
            # Calcular a ROI com base no centro do vídeo
            roi = (center_x - roi_width // 2, center_y - roi_height // 2, roi_width, roi_height)
            roi_selected = True
            tracker.init(frame, roi)

    success, roi = tracker.update(frame)

    if success:
        (x, y, w, h) = tuple(map(int, roi))
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
    cv2.imshow("Frame", frame)

    if cv2.waitKey(1) & 0xFF == 27:
        break

cap.release()
cv2.destroyAllWindows()
